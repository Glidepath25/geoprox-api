{"dependencies":[{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"TokenManager\", {\n    enumerable: true,\n    get: function () {\n      return TokenManager;\n    }\n  });\n  var _expoSecureStore = require(_dependencyMap[0], \"expo-secure-store\");\n  var SecureStore = _interopNamespace(_expoSecureStore);\n  const ACCESS_TOKEN_KEY = 'access_token';\n  const REFRESH_TOKEN_KEY = 'refresh_token';\n  const TOKEN_EXPIRY_KEY = 'token_expiry';\n  const REFRESH_EXPIRY_KEY = 'refresh_expiry';\n  const TokenManager = {\n    // Store tokens securely\n    async storeTokens(accessToken, refreshToken, expiresIn, refreshExpiresIn) {\n      const accessExpiry = Date.now() + expiresIn * 1000;\n      const refreshExpiry = Date.now() + refreshExpiresIn * 1000;\n      await Promise.all([SecureStore.setItemAsync(ACCESS_TOKEN_KEY, accessToken), SecureStore.setItemAsync(REFRESH_TOKEN_KEY, refreshToken), SecureStore.setItemAsync(TOKEN_EXPIRY_KEY, accessExpiry.toString()), SecureStore.setItemAsync(REFRESH_EXPIRY_KEY, refreshExpiry.toString())]);\n    },\n    // Get access token\n    async getAccessToken() {\n      return await SecureStore.getItemAsync(ACCESS_TOKEN_KEY);\n    },\n    // Get refresh token\n    async getRefreshToken() {\n      return await SecureStore.getItemAsync(REFRESH_TOKEN_KEY);\n    },\n    // Check if access token is expired or about to expire (within 5 minutes)\n    async isAccessTokenExpired() {\n      const expiry = await SecureStore.getItemAsync(TOKEN_EXPIRY_KEY);\n      if (!expiry) return true;\n      const expiryTime = parseInt(expiry);\n      const now = Date.now();\n      const fiveMinutes = 5 * 60 * 1000;\n      return now >= expiryTime - fiveMinutes;\n    },\n    // Check if refresh token is expired\n    async isRefreshTokenExpired() {\n      const expiry = await SecureStore.getItemAsync(REFRESH_EXPIRY_KEY);\n      if (!expiry) return true;\n      const expiryTime = parseInt(expiry);\n      return Date.now() >= expiryTime;\n    },\n    // Clear all tokens\n    async clearTokens() {\n      await Promise.all([SecureStore.deleteItemAsync(ACCESS_TOKEN_KEY), SecureStore.deleteItemAsync(REFRESH_TOKEN_KEY), SecureStore.deleteItemAsync(TOKEN_EXPIRY_KEY), SecureStore.deleteItemAsync(REFRESH_EXPIRY_KEY)]);\n    },\n    // Refresh access token\n    async refreshAccessToken(apiUrl) {\n      try {\n        const refreshToken = await this.getRefreshToken();\n        if (!refreshToken) {\n          return false;\n        }\n        const response = await fetch(`${apiUrl}/api/mobile/auth/refresh`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            refresh_token: refreshToken\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          await this.storeTokens(data.access_token, data.refresh_token, data.expires_in, data.refresh_expires_in);\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('Token refresh error:', error);\n        return false;\n      }\n    }\n  };\n});","lineCount":97,"map":[[22,2,8,0,"Object"],[22,8,8,0],[22,9,8,0,"defineProperty"],[22,23,8,0],[22,24,8,0,"exports"],[22,31,8,0],[23,4,8,0,"enumerable"],[23,14,8,0],[24,4,8,0,"get"],[24,7,8,0],[24,18,8,0,"get"],[24,19,8,0],[25,6,8,0],[25,13,8,0,"TokenManager"],[25,25,8,0],[26,4,8,0],[27,2,8,0],[28,2,1,0],[28,6,1,0,"_expoSecureStore"],[28,22,1,0],[28,25,1,0,"require"],[28,32,1,0],[28,33,1,0,"_dependencyMap"],[28,47,1,0],[29,2,1,0],[29,6,1,0,"SecureStore"],[29,17,1,0],[29,20,1,0,"_interopNamespace"],[29,37,1,0],[29,38,1,0,"_expoSecureStore"],[29,54,1,0],[30,2,3,0],[30,8,3,6,"ACCESS_TOKEN_KEY"],[30,24,3,22],[30,27,3,25],[30,41,3,39],[31,2,4,0],[31,8,4,6,"REFRESH_TOKEN_KEY"],[31,25,4,23],[31,28,4,26],[31,43,4,41],[32,2,5,0],[32,8,5,6,"TOKEN_EXPIRY_KEY"],[32,24,5,22],[32,27,5,25],[32,41,5,39],[33,2,6,0],[33,8,6,6,"REFRESH_EXPIRY_KEY"],[33,26,6,24],[33,29,6,27],[33,45,6,43],[34,2,8,7],[34,8,8,13,"TokenManager"],[34,20,8,25],[34,23,8,28],[35,4,9,2],[36,4,10,2],[36,10,10,8,"storeTokens"],[36,21,10,19,"storeTokens"],[36,22,11,4,"accessToken"],[36,33,11,23],[36,35,12,4,"refreshToken"],[36,47,12,24],[36,49,13,4,"expiresIn"],[36,58,13,21],[36,60,14,4,"refreshExpiresIn"],[36,76,14,28],[36,78,15,19],[37,6,16,4],[37,12,16,10,"accessExpiry"],[37,24,16,22],[37,27,16,25,"Date"],[37,31,16,29],[37,32,16,30,"now"],[37,35,16,33],[37,36,16,34],[37,37,16,35],[37,40,16,38,"expiresIn"],[37,49,16,47],[37,52,16,50],[37,56,16,54],[38,6,17,4],[38,12,17,10,"refreshExpiry"],[38,25,17,23],[38,28,17,26,"Date"],[38,32,17,30],[38,33,17,31,"now"],[38,36,17,34],[38,37,17,35],[38,38,17,36],[38,41,17,39,"refreshExpiresIn"],[38,57,17,55],[38,60,17,58],[38,64,17,62],[39,6,19,4],[39,12,19,10,"Promise"],[39,19,19,17],[39,20,19,18,"all"],[39,23,19,21],[39,24,19,22],[39,25,20,6,"SecureStore"],[39,36,20,17],[39,37,20,18,"setItemAsync"],[39,49,20,30],[39,50,20,31,"ACCESS_TOKEN_KEY"],[39,66,20,47],[39,68,20,49,"accessToken"],[39,79,20,60],[39,80,20,61],[39,82,21,6,"SecureStore"],[39,93,21,17],[39,94,21,18,"setItemAsync"],[39,106,21,30],[39,107,21,31,"REFRESH_TOKEN_KEY"],[39,124,21,48],[39,126,21,50,"refreshToken"],[39,138,21,62],[39,139,21,63],[39,141,22,6,"SecureStore"],[39,152,22,17],[39,153,22,18,"setItemAsync"],[39,165,22,30],[39,166,22,31,"TOKEN_EXPIRY_KEY"],[39,182,22,47],[39,184,22,49,"accessExpiry"],[39,196,22,61],[39,197,22,62,"toString"],[39,205,22,70],[39,206,22,71],[39,207,22,72],[39,208,22,73],[39,210,23,6,"SecureStore"],[39,221,23,17],[39,222,23,18,"setItemAsync"],[39,234,23,30],[39,235,23,31,"REFRESH_EXPIRY_KEY"],[39,253,23,49],[39,255,23,51,"refreshExpiry"],[39,268,23,64],[39,269,23,65,"toString"],[39,277,23,73],[39,278,23,74],[39,279,23,75],[39,280,23,76],[39,281,24,5],[39,282,24,6],[40,4,25,2],[40,5,25,3],[41,4,27,2],[42,4,28,2],[42,10,28,8,"getAccessToken"],[42,24,28,22,"getAccessToken"],[42,25,28,22],[42,27,28,49],[43,6,29,4],[43,13,29,11],[43,19,29,17,"SecureStore"],[43,30,29,28],[43,31,29,29,"getItemAsync"],[43,43,29,41],[43,44,29,42,"ACCESS_TOKEN_KEY"],[43,60,29,58],[43,61,29,59],[44,4,30,2],[44,5,30,3],[45,4,32,2],[46,4,33,2],[46,10,33,8,"getRefreshToken"],[46,25,33,23,"getRefreshToken"],[46,26,33,23],[46,28,33,50],[47,6,34,4],[47,13,34,11],[47,19,34,17,"SecureStore"],[47,30,34,28],[47,31,34,29,"getItemAsync"],[47,43,34,41],[47,44,34,42,"REFRESH_TOKEN_KEY"],[47,61,34,59],[47,62,34,60],[48,4,35,2],[48,5,35,3],[49,4,37,2],[50,4,38,2],[50,10,38,8,"isAccessTokenExpired"],[50,30,38,28,"isAccessTokenExpired"],[50,31,38,28],[50,33,38,49],[51,6,39,4],[51,12,39,10,"expiry"],[51,18,39,16],[51,21,39,19],[51,27,39,25,"SecureStore"],[51,38,39,36],[51,39,39,37,"getItemAsync"],[51,51,39,49],[51,52,39,50,"TOKEN_EXPIRY_KEY"],[51,68,39,66],[51,69,39,67],[52,6,40,4],[52,10,40,8],[52,11,40,9,"expiry"],[52,17,40,15],[52,19,40,17],[52,26,40,24],[52,30,40,28],[53,6,42,4],[53,12,42,10,"expiryTime"],[53,22,42,20],[53,25,42,23,"parseInt"],[53,33,42,31],[53,34,42,32,"expiry"],[53,40,42,38],[53,41,42,39],[54,6,43,4],[54,12,43,10,"now"],[54,15,43,13],[54,18,43,16,"Date"],[54,22,43,20],[54,23,43,21,"now"],[54,26,43,24],[54,27,43,25],[54,28,43,26],[55,6,44,4],[55,12,44,10,"fiveMinutes"],[55,23,44,21],[55,26,44,24],[55,27,44,25],[55,30,44,28],[55,32,44,30],[55,35,44,33],[55,39,44,37],[56,6,46,4],[56,13,46,11,"now"],[56,16,46,14],[56,20,46,19,"expiryTime"],[56,30,46,29],[56,33,46,32,"fiveMinutes"],[56,44,46,44],[57,4,47,2],[57,5,47,3],[58,4,49,2],[59,4,50,2],[59,10,50,8,"isRefreshTokenExpired"],[59,31,50,29,"isRefreshTokenExpired"],[59,32,50,29],[59,34,50,50],[60,6,51,4],[60,12,51,10,"expiry"],[60,18,51,16],[60,21,51,19],[60,27,51,25,"SecureStore"],[60,38,51,36],[60,39,51,37,"getItemAsync"],[60,51,51,49],[60,52,51,50,"REFRESH_EXPIRY_KEY"],[60,70,51,68],[60,71,51,69],[61,6,52,4],[61,10,52,8],[61,11,52,9,"expiry"],[61,17,52,15],[61,19,52,17],[61,26,52,24],[61,30,52,28],[62,6,54,4],[62,12,54,10,"expiryTime"],[62,22,54,20],[62,25,54,23,"parseInt"],[62,33,54,31],[62,34,54,32,"expiry"],[62,40,54,38],[62,41,54,39],[63,6,55,4],[63,13,55,11,"Date"],[63,17,55,15],[63,18,55,16,"now"],[63,21,55,19],[63,22,55,20],[63,23,55,21],[63,27,55,25,"expiryTime"],[63,37,55,35],[64,4,56,2],[64,5,56,3],[65,4,58,2],[66,4,59,2],[66,10,59,8,"clearTokens"],[66,21,59,19,"clearTokens"],[66,22,59,19],[66,24,59,37],[67,6,60,4],[67,12,60,10,"Promise"],[67,19,60,17],[67,20,60,18,"all"],[67,23,60,21],[67,24,60,22],[67,25,61,6,"SecureStore"],[67,36,61,17],[67,37,61,18,"deleteItemAsync"],[67,52,61,33],[67,53,61,34,"ACCESS_TOKEN_KEY"],[67,69,61,50],[67,70,61,51],[67,72,62,6,"SecureStore"],[67,83,62,17],[67,84,62,18,"deleteItemAsync"],[67,99,62,33],[67,100,62,34,"REFRESH_TOKEN_KEY"],[67,117,62,51],[67,118,62,52],[67,120,63,6,"SecureStore"],[67,131,63,17],[67,132,63,18,"deleteItemAsync"],[67,147,63,33],[67,148,63,34,"TOKEN_EXPIRY_KEY"],[67,164,63,50],[67,165,63,51],[67,167,64,6,"SecureStore"],[67,178,64,17],[67,179,64,18,"deleteItemAsync"],[67,194,64,33],[67,195,64,34,"REFRESH_EXPIRY_KEY"],[67,213,64,52],[67,214,64,53],[67,215,65,5],[67,216,65,6],[68,4,66,2],[68,5,66,3],[69,4,68,2],[70,4,69,2],[70,10,69,8,"refreshAccessToken"],[70,28,69,26,"refreshAccessToken"],[70,29,69,27,"apiUrl"],[70,35,69,41],[70,37,69,61],[71,6,70,4],[71,10,70,8],[72,8,71,6],[72,14,71,12,"refreshToken"],[72,26,71,24],[72,29,71,27],[72,35,71,33],[72,39,71,37],[72,40,71,38,"getRefreshToken"],[72,55,71,53],[72,56,71,54],[72,57,71,55],[73,8,72,6],[73,12,72,10],[73,13,72,11,"refreshToken"],[73,25,72,23],[73,27,72,25],[74,10,73,8],[74,17,73,15],[74,22,73,20],[75,8,74,6],[76,8,76,6],[76,14,76,12,"response"],[76,22,76,20],[76,25,76,23],[76,31,76,29,"fetch"],[76,36,76,34],[76,37,76,35],[76,40,76,38,"apiUrl"],[76,46,76,44],[76,72,76,70],[76,74,76,72],[77,10,77,8,"method"],[77,16,77,14],[77,18,77,16],[77,24,77,22],[78,10,78,8,"headers"],[78,17,78,15],[78,19,78,17],[79,12,79,10],[79,26,79,24],[79,28,79,26],[80,10,80,8],[80,11,80,9],[81,10,81,8,"body"],[81,14,81,12],[81,16,81,14,"JSON"],[81,20,81,18],[81,21,81,19,"stringify"],[81,30,81,28],[81,31,81,29],[82,12,81,31,"refresh_token"],[82,25,81,44],[82,27,81,46,"refreshToken"],[83,10,81,59],[83,11,81,60],[84,8,82,6],[84,9,82,7],[84,10,82,8],[85,8,84,6],[85,12,84,10,"response"],[85,20,84,18],[85,21,84,19,"ok"],[85,23,84,21],[85,25,84,23],[86,10,85,8],[86,16,85,14,"data"],[86,20,85,18],[86,23,85,21],[86,29,85,27,"response"],[86,37,85,35],[86,38,85,36,"json"],[86,42,85,40],[86,43,85,41],[86,44,85,42],[87,10,86,8],[87,16,86,14],[87,20,86,18],[87,21,86,19,"storeTokens"],[87,32,86,30],[87,33,87,10,"data"],[87,37,87,14],[87,38,87,15,"access_token"],[87,50,87,27],[87,52,88,10,"data"],[87,56,88,14],[87,57,88,15,"refresh_token"],[87,70,88,28],[87,72,89,10,"data"],[87,76,89,14],[87,77,89,15,"expires_in"],[87,87,89,25],[87,89,90,10,"data"],[87,93,90,14],[87,94,90,15,"refresh_expires_in"],[87,112,91,8],[87,113,91,9],[88,10,92,8],[88,17,92,15],[88,21,92,19],[89,8,93,6],[90,8,95,6],[90,15,95,13],[90,20,95,18],[91,6,96,4],[91,7,96,5],[91,8,96,6],[91,15,96,13,"error"],[91,20,96,18],[91,22,96,20],[92,8,97,6,"console"],[92,15,97,13],[92,16,97,14,"error"],[92,21,97,19],[92,22,97,20],[92,44,97,42],[92,46,97,44,"error"],[92,51,97,49],[92,52,97,50],[93,8,98,6],[93,15,98,13],[93,20,98,18],[94,6,99,4],[95,4,100,2],[96,2,101,0],[96,3,101,1],[97,0,101,2],[97,3]],"functionMap":{"names":["<global>","TokenManager.storeTokens","TokenManager.getAccessToken","TokenManager.getRefreshToken","TokenManager.isAccessTokenExpired","TokenManager.isRefreshTokenExpired","TokenManager.clearTokens","TokenManager.refreshAccessToken"],"mappings":"AAA;ECS;GDe;EEG;GFE;EGG;GHE;EIG;GJS;EKG;GLM;EMG;GNO;EOG;GP+B"},"hasCjsExports":false},"type":"js/module"}]}